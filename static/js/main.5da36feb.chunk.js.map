{"version":3,"sources":["components/Message.js","components/MessageList.js","components/SendMessageForm.js","components/RoomList.js","components/NewRoomForm.js","App.js","config.js","index.js"],"names":["Message","props","react_default","a","createElement","className","username","text","MessageList","node","ReactDOM","findDOMNode","this","shouldScrollToBottom","scrollTop","clientHeight","scrollHeight","roomId","messages","map","message","index","components_Message","key","senderId","Component","SendMessageForm","state","handleChange","e","_this","setState","target","value","handleSubmit","preventDefault","sendMessage","onSubmit","disabled","onChange","placeholder","type","RoomList","orderedRooms","Object","toConsumableArray","rooms","sort","b","id","room","active","onClick","subscribeToRoom","href","name","React","NewRoomForm","roomName","createRoom","required","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","joinableRooms","joinedRooms","bind","assertThisInitialized","getRooms","_this2","Chatkit","ChatManager","instanceLocator","userId","tokenProvider","TokenProvider","url","connect","then","currentUser","catch","err","console","log","_this3","getJoinableRooms","_this4","hooks","onNewMessage","concat","_this5","components_RoomList","components_MessageList","components_SendMessageForm","components_NewRoomForm","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5da36feb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className=\"message\">\r\n            <div className=\"message-username\">{props.username}</div>\r\n            <div className=\"message-text\">{props.text}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Message from './Message';\r\n\r\nclass MessageList extends Component {\r\n\r\n    componentWillUpdate(){\r\n        const node = ReactDOM.findDOMNode(this)\r\n        this.shouldScrollToBottom = node.scrollTop + node.clientHeight >= node.scrollHeight\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(this.shouldScrollToBottom){\r\n            const node = ReactDOM.findDOMNode(this)\r\n            node.scrollTop = node.scrollHeight\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        if(!this.props.roomId){\r\n            return (\r\n                <div className=\"message-list\">\r\n                    <div className=\"join-room\">\r\n                        Join a room! &rarr;\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div className=\"message-list\">\r\n                {this.props.messages.map((message, index) => {\r\n                    return (\r\n                        <Message key={index} username={message.senderId} text={message.text} />\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageList","import React, {Component} from 'react';\r\n\r\nclass SendMessageForm extends Component {\r\n    state = { message: '' }\r\n       \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            message: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.sendMessage(this.state.message)\r\n        this.setState({\r\n            message: ''\r\n        })\r\n    }\r\n    \r\n    render(){\r\n    return (\r\n        <form onSubmit={this.handleSubmit} className=\"send-message-form\">\r\n                <input\r\n                    disabled={this.props.disabled}\r\n                    onChange={this.handleChange}\r\n                    value={this.state.message}\r\n                    placeholder=\"Type your message and HIT Enter.\"\r\n                    type=\"text\" />\r\n        </form>\r\n    );\r\n  }\r\n}\r\nexport default SendMessageForm;","import React from 'react'\r\n\r\nclass RoomList extends React.Component {\r\n    render () {\r\n        const orderedRooms = [...this.props.rooms].sort((a, b) => a.id - b.id)\r\n        return (\r\n            <div className=\"rooms-list\">\r\n                <ul>\r\n                <h2>Your rooms:</h2>\r\n                    {orderedRooms.map(room => {\r\n                        const active = this.props.roomId === room.id ? \"active\" : \"\";\r\n                        return (\r\n                            <li key={room.id} className={\"room \" + active}>\r\n                                <a onClick={() => this.props.subscribeToRoom(room.id)} href=\"#\"># {room.name}\r\n                                </a>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomList     ","import React, {Component} from 'react';\r\n\r\nclass NewRoomForm extends Component {\r\n    state = {\r\n        roomName: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            roomName: e.target.value\r\n        }) \r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createRoom(this.state.roomName)\r\n        this.setState({ roomName: ''})\r\n    }\r\n\r\n    render(){\r\n    return (\r\n        <div className=\"new-room-form\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input\r\n                        onChange={this.handleChange}\r\n                        type=\"text\" \r\n                        value={this.state.roomName}\r\n                        placeholder=\"Create a Room\" \r\n                        required />\r\n                    <button id=\"create-room-btn\" type=\"submit\">+</button>\r\n            </form>\r\n        </div>\r\n    );\r\n  }  \r\n};\r\n\r\nexport default NewRoomForm;","import React from 'react'\nimport Chatkit from '@pusher/chatkit'\nimport MessageList from './components/MessageList'\nimport SendMessageForm from './components/SendMessageForm'\nimport RoomList from './components/RoomList'\nimport NewRoomForm from './components/NewRoomForm'\n\nimport { tokenUrl, instanceLocator } from './config'\n\nclass App extends React.Component {\n    //Initialized state for the chatkit\n    constructor() {\n        super()\n        this.state = {\n            roomId: null,\n            messages: [],\n            joinableRooms: [],\n            joinedRooms: []\n        }\n        this.sendMessage = this.sendMessage.bind(this)\n        this.subscribeToRoom = this.subscribeToRoom.bind(this)\n        this.getRooms = this.getRooms.bind(this)\n        this.createRoom = this.createRoom.bind(this)\n    } \n    \n    //Lifecycle method to ChatManager\n    componentDidMount() {\n        const chatManager = new Chatkit.ChatManager({\n            instanceLocator,\n            userId: 'Zayn', //Duh I'm a big fan\n            tokenProvider: new Chatkit.TokenProvider({\n                url: tokenUrl\n            })\n        })\n        \n        chatManager.connect()\n        .then(currentUser => {\n            this.currentUser = currentUser\n            this.getRooms()\n        })\n        .catch(err => console.log('error on connecting: ', err))\n    }\n    \n\n    //To get the rooms from the chatkit \n    getRooms() {\n        this.currentUser.getJoinableRooms()\n        .then(joinableRooms => {\n            this.setState({\n                joinableRooms,\n                joinedRooms: this.currentUser.rooms\n            })\n        })\n        .catch(err => console.log('error on joinableRooms: ', err))\n    }\n    \n\n    //Subscribe to Rooms from the chatikit\n    subscribeToRoom(roomId) {\n        this.setState({ messages: [] })\n        this.currentUser.subscribeToRoom({\n            roomId: roomId,\n            hooks: {\n                onNewMessage: message => {\n                    this.setState({\n                        messages: [...this.state.messages, message]\n                    })\n                }\n            }\n        })\n        .then(room => {\n            this.setState({\n                roomId: room.id\n            })\n            this.getRooms()\n        })\n        .catch(err => console.log('error on subscribing to room: ', err))\n    }\n    \n\n    //To send the message from the react dashboard to chatkit\n    sendMessage(text) {\n        this.currentUser.sendMessage({\n            text,\n            roomId: this.state.roomId\n        })\n    }\n    \n    //To create room in the chatkit dashboard\n    createRoom(name){\n      this.currentUser.createRoom({\n        name\n      })\n      .then(room => this.subscribeToRoom(room.id))\n      .catch(err => console.log('Error to create Room: ', err))\n    }\n\n\n    render() {\n        return (\n            <div className=\"app\">\n                <RoomList\n                    roomId={this.state.roomId}\n                    subscribeToRoom={this.subscribeToRoom}\n                    rooms={[...this.state.joinableRooms, ...this.state.joinedRooms]} />\n                <MessageList roomId={this.state.roomId} messages={this.state.messages} />\n                <SendMessageForm disabled={!this.state.roomId} sendMessage={this.sendMessage} />\n                <NewRoomForm createRoom={this.createRoom}/>\n            </div>\n        );\n    }\n}\n\nexport default App","const tokenUrl = \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/2a244bd9-3259-4e52-ba17-e6acf27b1390/token\";\r\nconst instanceLocator = \"v1:us1:2a244bd9-3259-4e52-ba17-e6acf27b1390\";\r\n\r\nexport { tokenUrl, instanceLocator }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}